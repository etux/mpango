<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

	<import resource="classpath:spring-common.xml" />

	<!-- Enables annotation based configuration -->
	<context:annotation-config />
	
	<!-- scans for annotated components -->
	<context:component-scan base-package="net.sf.mpango.game.core" />
	
	<!-- Allows replacement in the spring xml configuration -->
	<context:property-placeholder location="classpath:/system.properties" />
	
	<!-- creates an activemq connection factory using the amq namespace -->
	<amq:connectionFactory 
		id="amqConnectionFactory" 
		brokerURL="${jms.url}" 
		userName="${jms.username}" 
		password="${jms.password}" />
	
	<!-- CachingConnectionFactory Definition, sessionCacheSize property is the number of sessions to cache -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
	    <constructor-arg ref="amqConnectionFactory" />
		<property name="exceptionListener" ref="jmsExceptionListener" />
		<property name="sessionCacheSize" value="100" />
	</bean>

	<!-- Queue for dealing with messages from users that forgot their password -->
    <amq:queue id="core2interfaceQueue" physicalName="${queue.core2interface}" />
    <amq:queue id="interface2CoreQueue" physicalName="${queue.interface2core}" />

	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
	   <constructor-arg ref="connectionFactory"/>
	</bean>
	
    <!-- and this is the message listener container -->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="interface2CoreQueue" />
        <property name="messageListener" ref="gameServiceListener" />
    </bean>
	
	<!-- Data source 
	     TODO change this to a non jndi data source -->
	<bean id="gameDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/datasource" />
	</bean>

	<bean id="gameSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="gameDataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>
	
	<bean name="playerDAO" class="net.sf.mpango.game.core.dao.HibernatePlayerDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean name="playerService" class="net.sf.mpango.game.core.service.PlayerServiceImpl">
		<property name="playerDAO" ref="playerDAO" />
	</bean>

    <bean name="gameService" class="net.sf.mpango.game.core.service.GameServiceImpl" init-method="init">
    	<property name="playerService" ref="playerService" />
    	<property name="jmsTemplate" ref="jmsTemplate" />
    </bean>
    
    <bean name="gameServiceListener" class="net.sf.mpango.game.core.jms.GameServiceListener">
    	<property name="gameService" ref="gameService" />
    </bean>

</beans>
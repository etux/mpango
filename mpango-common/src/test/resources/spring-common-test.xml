<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

	<!-- Enables annotation based configuration -->
	<context:annotation-config />
	
	<!-- scans for annotated components -->
	<context:component-scan base-package="net.sf.mpango.common" />
	
	<!-- Allows replacement in the spring xml configuration -->
	<context:property-placeholder location="classpath:/system.properties" />
	
	<!-- creates an activemq connection factory using the amq namespace -->
<!-- 	<amq:connectionFactory  -->
<!-- 		id="amqConnectionFactory"  -->
<!-- 		brokerURL="${jms.url}"  -->
<!-- 		userName="${jms.username}"  -->
<!-- 		password="${jms.password}" /> -->
	
	<!-- CachingConnectionFactory Definition, sessionCacheSize property is the number of sessions to cache -->
<!-- 	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> -->
<!-- 	    <constructor-arg ref="amqConnectionFactory" /> -->
<!-- 		<property name="exceptionListener" ref="jmsExceptionListener" /> -->
<!-- 		<property name="sessionCacheSize" value="100" /> -->
<!-- 	</bean> -->

	<!-- JmsTemplate Definition -->
<!-- 	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"> -->
<!-- 	   <constructor-arg ref="connectionFactory"/> -->
<!-- 	</bean> -->
	
	 
	
	<bean 
		id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:sample" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean 
		id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<bean 
		id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="userDAO" class="net.sf.mpango.common.directory.dao.HibernateUserDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="authService" class="net.sf.mpango.common.directory.service.AuthenticationService">
		<property name="userDAO" ref="userDAO" />
	</bean>
	
	<bean name="authFacade" class="net.sf.mpango.common.directory.facade.AuthenticationFacade">
		<property name="authService" ref="authService" />
	</bean>

</beans>